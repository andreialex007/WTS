// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WTS.DL;

namespace WTS.DL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180216193043_RemoveUnitsSelfReference")]
    partial class RemoveUnitsSelfReference
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WTS.DL.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Customer");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("FromStoreId");

                    b.Property<int?>("FromSupplierId");

                    b.Property<int?>("FromWarehouseId");

                    b.Property<string>("Remarks");

                    b.Property<int?>("ToStoreId");

                    b.Property<int?>("ToSupplierId");

                    b.Property<int?>("ToWarehouseId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("FromStoreId");

                    b.HasIndex("FromSupplierId");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("ToStoreId");

                    b.HasIndex("ToSupplierId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("WTS.DL.Entities.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InvoiceId");

                    b.Property<int>("ProductId");

                    b.Property<decimal>("Qty");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("WTS.DL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("SupplierId");

                    b.Property<int>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WTS.DL.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Description");

                    b.Property<string>("ExtraInformation");

                    b.Property<decimal>("Lat");

                    b.Property<decimal>("Lng");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("WTS.DL.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WTS.DL.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("WTS.DL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WTS.DL.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Description");

                    b.Property<decimal>("Lat");

                    b.Property<decimal>("Lng");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WTS.DL.Entities.Invoice", b =>
                {
                    b.HasOne("WTS.DL.Entities.Store", "FromStore")
                        .WithMany("Out")
                        .HasForeignKey("FromStoreId");

                    b.HasOne("WTS.DL.Entities.Supplier", "FromSupplier")
                        .WithMany("Out")
                        .HasForeignKey("FromSupplierId");

                    b.HasOne("WTS.DL.Entities.Warehouse", "FromWarehouse")
                        .WithMany("Out")
                        .HasForeignKey("FromWarehouseId");

                    b.HasOne("WTS.DL.Entities.Store", "ToStore")
                        .WithMany("In")
                        .HasForeignKey("ToStoreId");

                    b.HasOne("WTS.DL.Entities.Supplier", "ToSupplier")
                        .WithMany("In")
                        .HasForeignKey("ToSupplierId");

                    b.HasOne("WTS.DL.Entities.Warehouse", "ToWarehouse")
                        .WithMany("In")
                        .HasForeignKey("ToWarehouseId");
                });

            modelBuilder.Entity("WTS.DL.Entities.InvoiceLine", b =>
                {
                    b.HasOne("WTS.DL.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceLines")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WTS.DL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WTS.DL.Entities.Product", b =>
                {
                    b.HasOne("WTS.DL.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId");

                    b.HasOne("WTS.DL.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
